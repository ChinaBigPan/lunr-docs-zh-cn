(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{371:function(s,t,a){"use strict";a.r(t);var n=a(43),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"搜索"}},[s._v("搜索")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://lunrjs.com/guides/searching.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("英文原地址"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("在构建了文档索引之后，就要实际执行搜索了。")]),s._v(" "),a("p",[s._v("最简单的方法是将你想要搜索的文本传递到搜索方法中:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这样就会返回所有匹配关键词“foo”的所有文档的细节了。尽管它看起来像字符串，但是"),a("code",[s._v("search")]),s._v("方法将该字符串解析为一个搜索查询。它支持定义更复杂查询的特殊语法。")]),s._v(" "),a("p",[s._v("它还支持搜索多个关键词。如果一个文档匹配了"),a("strong",[s._v("至少")]),s._v("一个搜索关键词，那么就会显示在结果中。搜索关键词之间使用"),a("code",[s._v("空格")]),s._v("连接。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("上面的示例将匹配包含“foo”或“bar”的文档。同时包含这两个关键词的文档将获得更高的"),a("code",[s._v("score")]),s._v("分，且在结果中位列前茅。")]),s._v(" "),a("h2",{attrs:{id:"匹配得分-scoring"}},[s._v("匹配得分(scoring)")]),s._v(" "),a("p",[s._v("文档的匹配得分(也称为相关性)是由"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Okapi_BM25",target:"_blank",rel:"noopener noreferrer"}},[s._v("BM25"),a("OutboundLink")],1),s._v("算法计算的，此外还受"),a("a",{attrs:{href:"https://lunrjs.com/guides/searching.html#Boosts",target:"_blank",rel:"noopener noreferrer"}},[s._v("权重提升"),a("OutboundLink")],1),s._v("因素的影响。您无需过多地关心 BM25 如何实现的细节；总之，搜索词在"),a("strong",[s._v("单个文档")]),s._v("中出现的次数越多，该词对文档得分增加的贡献就越多，但是搜索词在"),a("strong",[s._v("整个文档集合")]),s._v("中出现的次数越多，该词对文档得分增加的贡献就越少。")]),s._v(" "),a("p",[s._v("举个例子，假设您正在为一组关于 JavaScript 测试库的文档建立索引。那么关键词“JavaScript”、“库”和“测试”在整个集合中就可能经常出现，因此找到一个提到这些关键词之一的文档并不是很重要。但是如果您搜索的是“集成测试”，则集合中只有三个文档中出现了关键词“集成”，其中之一多次提到，那么这个文档的得分就是最高的。")]),s._v(" "),a("h2",{attrs:{id:"通配符-wildcards"}},[s._v("通配符(wildcards)")]),s._v(" "),a("p",[s._v("Lunr 在执行搜索时指出通配符。通配符表示为星号(*)，它可以出现在搜索关键词中的任何位置。例如，下面的代码匹配所有以“foo”开头的文档：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("下面的代码匹配所有以“oo”结尾的文档：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*oo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如上面的示例所示的前置通配符应该谨慎使用。它们会对搜索性能产生负面影响，特别是在大型搜索中。")]),s._v(" "),a("p",[s._v("最后，通配符可以位于关键词的中间。下面代码将匹配任何包含以“f”开头、以“o”结尾的术语的文档:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'f*o'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("还值得注意的是，当搜索关键词包含通配符时，不会对其执行词干分析。")]),s._v(" "),a("h2",{attrs:{id:"字段-fields"}},[s._v("字段(fields)")]),s._v(" "),a("p",[s._v("默认情况，Lunr 将搜索文档中查询关键词的所有字段，并且将关键字限制在特定字段中。下面是在字段"),a("code",[s._v("title")]),s._v("中搜索"),a("code",[s._v('"foo"')]),s._v("关键词的示例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'title:foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("搜索关键词以字段名称为前缀，后面跟冒号("),a("code",[s._v(":")]),s._v(")。该字段必须是构建索引时定义的字段之一。未识别的字段将报错。")]),s._v(" "),a("p",[s._v("基于字段的搜索可以与所有其他关键词修饰符、通配符以及其他关键词进行组合。例如，要搜索"),a("code",[s._v("title")]),s._v("中以"),a("code",[s._v("foo")]),s._v("开头的单词或在任何字段中以"),a("code",[s._v('"bar"')]),s._v("开头的单词，可以使用以下代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'title:foo* bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"权重提升-boosts"}},[s._v("权重提升(boosts)")]),s._v(" "),a("p",[s._v("在多个关键词搜索中，其中一个可能比其他词要重要一些。对这种情况，Lunr 支持长期关键词等级提升。任何同提升的关键词匹配的文档都会获得更高的相关性分数，并在结果中出现在更高的位置。我们可以在关键词中插入("),a("code",[s._v("^")]),s._v(")符号和一个正整数来实现。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo^10 bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在上面的例子中，搜索关键词"),a("code",[s._v('"foo"')]),s._v("的权重是"),a("code",[s._v('"bar"')]),s._v("的"),a("code",[s._v("10")]),s._v(" 倍。提升倍数可以是任意正整数，不同的关键词可以有不同的值：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo^10 bar^5 baz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"模糊匹配-fuzzy-matches"}},[s._v("模糊匹配(fuzzy matches)")]),s._v(" "),a("p",[s._v("Lunr 支持在文档中进行关键词模糊匹配搜索，如果我们不清楚一个词的拼写则可以这么做，或者可以增加返回的搜索结果的数量。搜索时允许的模糊量也可以控制。模糊性是通过向关键词添加波浪号("),a("code",[s._v("~")]),s._v(")和一个"),a("strong",[s._v("正整数")]),s._v("来实现的。下面的代码搜索匹配所有文档中拥有"),a("code",[s._v('"foo"')]),s._v("相关"),a("code",[s._v("1")]),s._v("个单位编辑距离的文档:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo~1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("编辑距离为"),a("code",[s._v("1")]),s._v("意味着在添加、删除、更改或调换单词中的"),a("code",[s._v("1")]),s._v("个字符也会触发匹配行为。例如，“boo”会触发匹配因为它需要"),a("code",[s._v("1")]),s._v("次编辑(用“b”替换“f”)，但是“boot”不需要，因为它还需要在末尾加上一个“t”。")]),s._v(" "),a("h2",{attrs:{id:"指定关键词-term-presence"}},[s._v("指定关键词(term presence)")]),s._v(" "),a("p",[s._v("默认情况下，Lunr 使用逻辑或"),a("code",[s._v("OR")]),s._v("将搜索中的多个术语组合起来。也就是说，搜索“foo bar”将匹配包含“foo”或包含“bar”或两者都包含的文档。我们可以使用关键词级别来控制，也就是说，可以指定匹配文档中每个关键词的存在情况。默认情况下每个关键词在匹配的文档中都是可配置的，但是必须至少存在一个匹配关键词。我们可以指定关键词"),a("strong",[s._v("必须")]),s._v("或"),a("strong",[s._v("必须不")]),s._v("在匹配的文档中出现。")]),s._v(" "),a("p",[s._v("为了表示某个关键词必须出现在匹配的文档中，该关键词的前缀应该是加号(+);为了表示某个术语必须不存在，该术语的前缀应该是减号(-)。如果没有前缀，则该关键词在匹配文档中的存在与否并不强制。")]),s._v(" "),a("p",[s._v("下面的示例表示搜索"),a("strong",[s._v("必须包含")]),s._v("“foo”，"),a("strong",[s._v("可能包含")]),s._v("“bar”和"),a("strong",[s._v("必须不")]),s._v("包含“baz”的文档:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"+foo bar -baz"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("模拟逻辑和"),a("code",[s._v("AND")]),s._v("搜索必须存在两个术语"),a("code",[s._v("“foo 和 bar”")]),s._v("的文档:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"+foo +bar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);